%%start set up code
RedBoxcount = int32(0);
IsFinished = false;
MarkerPosArray = {};
BlueMarkerArray = {};
holdname = 0;

NameArray = [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k','1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11'];
%%set(cam,'TimerFcn',@SetVideoObject);
MazeComplete = false;

%%while(MazeComplete == false) FOR THE LOOP SYSTEM
    
%run the function once to get a frame from red and blue elements to be stored in vectors
[MarkerPosArray] = GetFrame(MarkerPosArray);
[BlueMarkerArray] = GetBlueFrame(BlueMarkerArray);

objectcreate = size(MarkerPosArray, 1);
PermaObjectCreate = objectcreate; %Keeps a nonchanging value for the number of Markers
redobject = (objectcreate / 2); %%this value is a constant - Matlab cannot define constant values
disp(objectcreate);
objectscreated = 0;

%Dynamic remarker object creation
while(objectcreate ~= 0) %consider changing to a loop
    
    %%objnamevar = num2str(objectcreate);
    RedMarker{NameArray(objectcreate)} = Marker; %%creates marker of the position 
    copyover = MarkerPosArray(objectcreate, 1); %selects first element from that cell
    RedMarker{NameArray(objectcreate)}.Height = copyover; %%Sets the binds the coord to the array to the create created class element
    holdname = objectcreate;
    
    objectcreate = objectcreate - 1;
    copyover = MarkerPosArray(objectcreate, 1);
    RedMarker{NameArray(holdname)}.Width = copyover;
    
    disp(RedMarker{NameArray(holdname)}.Height);
    disp(RedMarker{NameArray(holdname)}.Width);
    objectcreate = objectcreate - 1; %%decreases the object total
    objectscreated = objectscreated + 1;%holds track of the actual amount of  red marker objects created
end

objectcreate = size(BlueMarkerArray, 1);
BlueMarker1 = PrimaryMarker; %%Only two blue markers will ever be needed
BlueMarker2 = PrimaryMarker;

copyover = BlueMarkerArray(objectcreate, 1);
BlueMarker1.Height = copyover;
objectcreate = objectcreate - 1;
copyover = BlueMarkerArray(objectcreate, 1);
BlueMarker1.Width = copyover;

objectcreate = objectcreate - 1;
copyover = BlueMarkerArray(objectcreate, 1);
BlueMarker2.Height = copyover;
objectcreate = objectcreate - 1;
copyover = BlueMarkerArray(objectcreate, 1);
BlueMarker2.Width = copyover;

BlueMarker1Con = cell2mat(BlueMarker1.Width);
BlueMarker2Con = cell2mat(BlueMarker2.Width);

if (BlueMarker1Con < BlueMarker2Con)
    BlueMarker1.isRobot = true;
    BlueMarker2.isEnd = true;
else
    BlueMarker1.isEnd = true;
    BlueMarker2.isRobot = true;
end

itts = 0;
valuecheck = objectscreated;
smallestHeight = valuecheck;
smallestWidth = valuecheck;
biggestHeight = valuecheck;
biggestWidth = valuecheck;
stopstate = PermaObjectCreate - valuecheck;
disp(valuecheck);
for valuecheck = valuecheck:-1:0 %FOR loop iterates through each value comparing them Fully test this section

    currentValH = cell2mat(RedMarker{NameArray(valuecheck)}.Height);
    currentValW = cell2mat(RedMarker{NameArray(valuecheck)}.Width);
    smallestValH = cell2mat(RedMarker{NameArray(smallestHeight)}.Height);
    smallestValW = cell2mat(RedMarker{NameArray(smallestWidth)}.Width); %converts the values from cells to vairable for working
    biggestValH = cell2mat(RedMarker{NameArray(biggestHeight)}.Height);
    biggestValW = cell2mat(RedMarker{NameArray(biggestWidth)}.Width);



if (smallestValH > currentValH) %checks the height against the current value
    smallestHeight = valuecheck;
end

if (smallestValW > currentValW) %checks the width against the current value
    smallestWidth = valuecheck;
end

if (biggestValH < currentValH) %checks the width against the current value
    biggestHeight = valuecheck;
end

if (biggestValW < currentValW) %checks the width against the current value
    biggestWidth = valuecheck;
end

    itts = itts + 1;
end
disp(NameArray(smallestWidth));
disp(NameArray(smallestHeight));
disp(NameArray(biggestWidth));
disp(NameArray(biggestHeight));
%%Sets bools based on statements set
RedMarker{NameArray(smallestWidth)}.isBottomRight = true;
RedMarker{NameArray(smallestHeight)}.isTopRight = true;
RedMarker{NameArray(biggestHeight)}.isTopLeft = true;
RedMarker{NameArray(biggestWidth)}.isBottomRight = true;

%finding items within a range

MazeComplete = true; %%test
%%is complete end loop
